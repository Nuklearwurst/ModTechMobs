buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

version = "1.6.1-alpha"
group= "com.fravokados.dangertech" // http://maven.apache.org/guides/mini/guide-naming-conventions.html

archivesBaseName = "DangerousTechnology"

// java version
sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = mcversion + "-" + forgeversion
    runDir = "run"

    mappings = mcp_mappings
	
	replace '@VERSION@', project.version
}

repositories {
	maven {
		name "ic2"
		url "http://maven.ic2.player.to/"
	}
    maven {
        name "xcompwiz"
        url "http://maven.xcompwiz.com"
    }
    maven {
        name "tesla"
        url 'http://maven.epoxide.xyz'
    }
    maven {
        name "jei"
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        name "immersive-engineering"
        url "http://blamejared.com/maven"
    }
}

dependencies {
    deobfCompile "net.industrial-craft:industrialcraft-2:${ic2_version}:api"
    deobfCompile "net.darkhax.tesla:Tesla:${tesla_version}"
    deobfCompile "mezz.jei:jei_${mcversion}:${jei_version}:api"

    runtime "blusunrize:ImmersiveEngineering:${immersive_engineering_version}"
    runtime "net.industrial-craft:industrialcraft-2:${ic2_version}"
    runtime "mezz.jei:jei_${mcversion}:${jei_version}"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include '*.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, that's not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
//        exclude 'mcmod.info'
        include 'assets/**/*.*'
    }
}

jar {
    from(sourceSets.api.output) {
        include '**/cofh/api/**'
    }
    //exclude unneeded mcmod.info files
    exclude 'nwcore.info'
    exclude 'techmobs.info'
    exclude 'mindim.info'
}

//These tasks build standalone jars

task mindimJar(type: Jar, dependsOn: reobfJar) {
    from(zipTree(jar.archivePath)) {
        include '**/dangertech/portals/**'
        include '**/assets/dangertechportals/**'
    }
    from(sourceSets.main.output.resourcesDir) {
        include 'mindim.info'
        rename('mindim.info', 'mcmod.info')
    }
    classifier = 'mindim'
}

task techmobsJar(type: Jar, dependsOn: reobfJar) {
    from(zipTree(jar.archivePath)) {
        include '**/dangertech/monsters/**'

        include '**/assets/dangertechmobs/**'
    }
    from(sourceSets.main.output.resourcesDir) {
        include 'techmobs.info'
        rename('techmobs.info', 'mcmod.info')
    }
    classifier = 'techmobs'
}

task nwcoreJar(type: Jar, dependsOn: reobfJar) {
    from(zipTree(jar.archivePath)) {
        include '**/dangertech/core/**'
        include '**/dangertech/api/**'
        include '**/assets/dangertech/**'

        include 'ic2/**'
        include 'com/xcompwiz/lookingglass/**'
    }
    from(sourceSets.main.output.resourcesDir) {
        include 'nwcore.info'
        rename('nwcore.info', 'mcmod.info')
    }
    classifier = 'nwcore'
}

task sourceOldJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

task apiJar(type: Jar) {
    from(sourceSets.main.allSource) {
        include "**/dangertech/api/**"
    }
    classifier = 'api'
}

artifacts {
    archives mindimJar
    archives techmobsJar
    archives nwcoreJar

    archives sourceJar
    archives deobfJar
    archives apiJar
}

idea {
    module {
        inheritOutputDirs = true
    }
}
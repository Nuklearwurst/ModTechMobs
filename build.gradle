buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "alpha-1.5"
group= "com.fravokados.dangertech" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
//noinspection GroovyUnusedAssignment
archivesBaseName = "DangerousTechnology"

minecraft {
    version = "1.7.10-10.13.3.1408-1.7.10"
    runDir = "run"
	
	replace '@VERSION@', project.version
}

repositories {
	maven {
		name = "ic2"
		url = "http://maven.ic2.player.to/"
	}
    maven {
        name "xcompwiz"
        url "http://maven.xcompwiz.com"
    }
}

configurations{
    api
    compile.extendsFrom api
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
    api 'net.industrial-craft:industrialcraft-2:2.2.719-experimental:api'
    api "com.xcompwiz.lookingglass:lookingglass:0.2.0.00:dev"

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include '*.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
//        exclude 'mcmod.info'
        include 'assets/**/*.*'
    }
}

jar {
    from {
        configurations.api.collect {
            it.isDirectory() ? it : zipTree(it).matching {
                include '**/api/**'
                exclude '**/buildcraft/**'
                exclude '**/ic2/api/crops/**'
                exclude '**/ic2/api/network/**'
                exclude '**/ic2/api/event/**'
                exclude '**/ic2/api/reactor/**'
                exclude '**/lookingglass/api/animator/**'
                exclude '**/lookingglass/api/event/**'
                exclude '**/lookingglass/api/hook/**'
                exclude '**/lookingglass/api/impl/**'
                exclude '**/lookingglass/api/view/**'
            }
        }
    }
    //exclude unneded mcmod.info files
    exclude 'nwcore.info'
    exclude 'techmobs.info'
    exclude 'mindim.info'
}

//These tasks build standalone jars

task mindimJar(type: Jar, dependsOn: reobf) {
    from(zipTree(jar.archivePath)) {
        include '**/dangertech/mindim/**'
        include '**/assets/mindim/**'
    }
    from(sourceSets.main.output.resourcesDir) {
        include 'mindim.info'
        rename('mindim.info', 'mcmod.info')
    }
    classifier = 'mindim'
}

task techmobsJar(type: Jar, dependsOn: reobf) {
    from(zipTree(jar.archivePath)) {
        include '**/dangertech/techmobs/**'

        include '**/assets/techmobs/**'
    }
    from(sourceSets.main.output.resourcesDir) {
        include 'techmobs.info'
        rename('techmobs.info', 'mcmod.info')
    }
    classifier = 'techmobs'
}

task nwcoreJar(type: Jar, dependsOn: reobf) {
    from(zipTree(jar.archivePath)) {
        include '**/dangertech/core/**'
        include '**/dangertech/api/**'
        include '**/assets/nwcore/**'

        include 'ic2/**'
        include 'com/xcompwiz/lookingglass/**'
    }
    from(sourceSets.main.output.resourcesDir) {
        include 'nwcore.info'
        rename('nwcore.info', 'mcmod.info')
    }
    classifier = 'nwcore'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

task apiJar(type: Jar) {
    from(sourceSets.main.allSource) {
        include "**/dangertech/api/**"
    }
    classifier = 'api'
}

artifacts {
    archives mindimJar
    archives techmobsJar
    archives nwcoreJar

    archives sourceJar
    archives deobfJar
    archives apiJar
}

idea {
    module {
        inheritOutputDirs = true
    }
}